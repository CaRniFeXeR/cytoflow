<?xml version="1.0" encoding="UTF-8"?>

<!-- FCM transforms XML File -->
    <transforms:Transformation-ML 
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xmlns:transforms="http://www.isac-net.org/std/Transformation-ML/v1.0/"
        xmlns:mml="http://www.w3.org/1998/Math/MathML"
        xsi:schemaLocation="
            http://www.isac-net.org/std/Transformation-ML/v1.0/  ../../Transformation-ML.v1.0/schema/Transformation-ML.v1.0.xsd
            http://www.w3.org/1998/Math/MathML ../../Transformation-ML.v1.0/mathml2/mathml2.xsd">
    
    <!-- All the Universal Transformations use the event in the int-10_4_test_file.fcs FCS file.
         It contains one event (10, 4) with parameters (FS, SS).
         
         Note that these are nowhere near exhausetive tests testing all of MathML (which is huge).
         Only basics are tested.
    -->    
    
    <!-- 
    
    2500 * log7(10) = 2958.236656
    
    where log7 is log in base 7.
    
    Note: Our library doesn't support Logs.
     -->
    <transforms:transformation transforms:newName="MathML log FS">
        <transforms:universal>
            <mml:math>
                <mml:apply>
                    <mml:times/>
                    <mml:cn>2500</mml:cn>
                    <mml:apply>
                        <mml:log/>
                        <mml:logbase>
                            <mml:cn>7</mml:cn>
                        </mml:logbase>
                        <mml:ci>FS</mml:ci>
                    </mml:apply>
                </mml:apply>
            </mml:math>
        </transforms:universal>
    </transforms:transformation>
    
    <!-- Transforms multiple parameters.
    
    10^2 / 4! = 100/24 = 4.16667
   
    -->
    <transforms:transformation transforms:newName="FS squared/fact SS">
        <transforms:universal>
            <mml:math>
                <mml:apply>
                    <mml:divide/>
                    <mml:apply>
                        <mml:power/>
                        <mml:ci>FS</mml:ci>
                        <mml:cn>2</mml:cn>
                    </mml:apply>
                    <mml:apply>
                        <mml:factorial/>
                        <mml:ci> SS</mml:ci>
                    </mml:apply>
                </mml:apply>
            </mml:math>
        </transforms:universal>
    </transforms:transformation>
    
    <!--
    
    sqrt(10) = 3.16227766
    
    -->
    <transforms:transformation transforms:newName="squareroot FS">
        <transforms:universal>
            <mml:math>
                <mml:apply>
                    <mml:root/>
                    <mml:degree><mml:cn>2</mml:cn></mml:degree>
                    <mml:ci>FS</mml:ci>
                </mml:apply>
            </mml:math>
        </transforms:universal>
    </transforms:transformation>
    
    <!-- Calculates the fourth root of 4 using powers (our library doesn't support
         roots with degree > 2)
    
    4 ^ (1/4) = sqrt(2) = 1.414213562
    
    -->
    <transforms:transformation transforms:newName="fourthroot SS">
        <transforms:universal>
            <mml:math>
                <mml:apply>
                    <mml:power/>
                    <mml:ci>   SS   </mml:ci>
                    <mml:cn>0.25</mml:cn>
                </mml:apply>
            </mml:math>
        </transforms:universal>
    </transforms:transformation>
    
    <!-- The last appply is what is used when the transformation is called.
    
    10^2 = 100   
    
    -->
    <transforms:transformation transforms:newName="multiple apply">
        <transforms:universal>
            <mml:math>
                <mml:apply>
                    <mml:power/>
                    <mml:ci>   SS   </mml:ci>
                    <mml:cn>0.25</mml:cn>
                </mml:apply>
                <mml:apply>
                    <mml:power/>
                    <mml:ci>   FS   </mml:ci>
                    <mml:cn>2</mml:cn>
                </mml:apply>
            </mml:math>
        </transforms:universal>
    </transforms:transformation>
    
    <!-- Tests all the simple arithemetic operations.
    
   (4 * (10 + 4) - (10 * 4)) / (10 + ((10 * 4) / (4 - 10))) = 4.8
    
    -->
    <transforms:transformation transforms:newName="arithmetic">
        <transforms:universal>
            <mml:math>
                <mml:apply>
                    <mml:divide/>
                	<mml:apply>
	                    <mml:minus/>
                    	<mml:apply>
                    		<mml:times/>
                    		<mml:apply>
	                    		<mml:plus/>
	                    		<mml:ci>FS</mml:ci>
	                    		<mml:ci>SS</mml:ci>
	                    	</mml:apply>
	                    	<mml:ci>SS</mml:ci>
	                    </mml:apply>
	                    <mml:apply>
                    		<mml:times/>
                    		<mml:ci>FS</mml:ci>
	                    	<mml:ci>SS</mml:ci>
	                    </mml:apply>
	                </mml:apply>
                    <mml:apply>
	                	<mml:plus/>
	                	<mml:ci>FS</mml:ci>
	                	<mml:apply>
	                		<mml:divide/>
	                		<mml:apply>
	                			<mml:times/>
	                			<mml:ci>FS</mml:ci>
	                    		<mml:ci>SS</mml:ci>
	                    	</mml:apply>
	                    	<mml:apply>
	                			<mml:minus/>
	                			<mml:ci>SS</mml:ci>
	                			<mml:ci>FS</mml:ci>
	                    	</mml:apply>			                    		
                		</mml:apply>
                	</mml:apply>
                </mml:apply>
            </mml:math>
        </transforms:universal>
    </transforms:transformation>
    
    <!-- Approximates Pi using a summation with FS number of terms. The summation is the
         Bailey-Borwein-Plouffe algorithm for calculating pi.
         
         Note: the SS here is *NOT* the SS in the FCS file. It is a bound variable (bvar element)
               and is used as the dummy variable in the summation. It could easily be i or j
               but was made SS to check that bvars are processed correctly.
               
               FS is the value from the event.
    
    Sum from SS=0 to 10 of
    
    1 / (16^SS) * ((4 / (8 * SS + 1)) - (2 / (8 * SS + 4)) - (1 / (8 * SS + 5)) - (1 / (8 * SS + 6))) = 3.141592653589793
    
    Note that the precision is important here as the sum finds better and better approximations of pi with more terms.
    So if less than 10 terms are used a less accurate apporixmation is given.
    
    -->
    <transforms:transformation transforms:newName="PiApprox">
        <transforms:universal>    
			<mml:math>
				<mml:apply>
						<mml:sum/>
						  <mml:bvar><mml:ci>SS</mml:ci></mml:bvar>
						  <mml:lowlimit>
						    <mml:cn>0</mml:cn>
						  </mml:lowlimit>
						  <mml:uplimit>
						    <mml:ci> FS </mml:ci>
						  </mml:uplimit>
						  <mml:apply>
							<mml:times/>
							<mml:apply>
								<mml:divide/>
								<mml:cn>1</mml:cn>
								<mml:apply>
									<mml:power/>
									<mml:cn>16</mml:cn>
									<mml:ci>SS</mml:ci>
								</mml:apply>
							</mml:apply>
							<mml:apply>
								<mml:minus/>
								<mml:apply>
									<mml:minus/>
									<mml:apply>
										<mml:minus/>
										<mml:apply>
											<mml:divide/>
											<mml:cn>4</mml:cn>
											<mml:apply>
												<mml:plus/>
												<mml:apply>
													<mml:times/>
														<mml:cn>8</mml:cn>
														<mml:ci>SS</mml:ci>
													</mml:apply>
													<mml:cn>1</mml:cn>
												</mml:apply>
											</mml:apply>
											
											<mml:apply>
												<mml:divide/>
												<mml:cn>2</mml:cn>
												<mml:apply>
													<mml:plus/>
													<mml:apply>
														<mml:times/>
														<mml:cn>8</mml:cn>
														<mml:ci>SS</mml:ci>
													</mml:apply>
													<mml:cn>4</mml:cn>
												</mml:apply>
											</mml:apply>
										</mml:apply>
										
										<mml:apply>
												<mml:divide/>
												<mml:cn>1</mml:cn>
												<mml:apply>
													<mml:plus/>
													<mml:apply>
														<mml:times/>
														<mml:cn>8</mml:cn>
														<mml:ci>SS</mml:ci>
													</mml:apply>
													<mml:cn>5</mml:cn>
												</mml:apply>
										</mml:apply>
									</mml:apply>
									
									<mml:apply>
												<mml:divide/>
												<mml:cn>1</mml:cn>
												<mml:apply>
													<mml:plus/>
													<mml:apply>
														<mml:times/>
														<mml:cn>8</mml:cn>
														<mml:ci>SS</mml:ci>
													</mml:apply>
													<mml:cn>6</mml:cn>
												</mml:apply>
									</mml:apply>
									
								</mml:apply>
							  </mml:apply>
				
					</mml:apply>
				</mml:math>
            </transforms:universal>
    </transforms:transformation>
    
</transforms:Transformation-ML>

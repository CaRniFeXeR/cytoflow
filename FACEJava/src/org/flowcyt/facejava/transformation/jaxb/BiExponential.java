//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.0.2-b01-fcs 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2006.08.17 at 04:09:29 PM PDT 
//


package org.flowcyt.facejava.transformation.jaxb;

import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlType;


/**
 * 
 * 				A Bi-exponential (BiEx) transformation
 * 				
 * 				The BiEx function is defined as follows:
 * 				- BiE(parameter) = root(B(y, a, b, c, d, f) - parameter), where root() is a standard root finding algorithm 
 * 				(e.g., Newton's method) that finds y such that B(y) = parameter. 
 * 				
 * 				The B function is defined as follows:
 * 				- B(y, a, b, c, d, f) = a * e^(b * y) - c * e^(-d * y) + f,
 * 				where the operands are specified by the a, b, c, d, f, and parameter attributes of the biexponential element.
 * 				e is the base of the natural logarithm, i.e., e = 2.71828 18284 59045 23536 02874 7135... 
 * 			
 * 
 * <p>Java class for Bi-exponential complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="Bi-exponential">
 *   &lt;complexContent>
 *     &lt;extension base="{http://www.isac-net.org/std/Transformation-ML/v1.0/}AbstractPredefinedTransformation">
 *       &lt;attribute name="a" use="required" type="{http://www.isac-net.org/std/common-types/v1.0/}PositiveDouble" />
 *       &lt;attribute name="b" use="required" type="{http://www.isac-net.org/std/common-types/v1.0/}PositiveDouble" />
 *       &lt;attribute name="c" use="required" type="{http://www.isac-net.org/std/common-types/v1.0/}PositiveDouble" />
 *       &lt;attribute name="d" use="required" type="{http://www.isac-net.org/std/common-types/v1.0/}PositiveDouble" />
 *       &lt;attribute name="f" use="required" type="{http://www.w3.org/2001/XMLSchema}double" />
 *     &lt;/extension>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "Bi-exponential", namespace = "http://www.isac-net.org/std/Transformation-ML/v1.0/")
public class BiExponential
    extends AbstractPredefinedTransformation
{

    @XmlAttribute(namespace = "http://www.isac-net.org/std/Transformation-ML/v1.0/", required = true)
    protected double a;
    @XmlAttribute(namespace = "http://www.isac-net.org/std/Transformation-ML/v1.0/", required = true)
    protected double b;
    @XmlAttribute(namespace = "http://www.isac-net.org/std/Transformation-ML/v1.0/", required = true)
    protected double c;
    @XmlAttribute(namespace = "http://www.isac-net.org/std/Transformation-ML/v1.0/", required = true)
    protected double d;
    @XmlAttribute(namespace = "http://www.isac-net.org/std/Transformation-ML/v1.0/", required = true)
    protected double f;

    /**
     * Gets the value of the a property.
     * 
     */
    public double getA() {
        return a;
    }

    /**
     * Sets the value of the a property.
     * 
     */
    public void setA(double value) {
        this.a = value;
    }

    /**
     * Gets the value of the b property.
     * 
     */
    public double getB() {
        return b;
    }

    /**
     * Sets the value of the b property.
     * 
     */
    public void setB(double value) {
        this.b = value;
    }

    /**
     * Gets the value of the c property.
     * 
     */
    public double getC() {
        return c;
    }

    /**
     * Sets the value of the c property.
     * 
     */
    public void setC(double value) {
        this.c = value;
    }

    /**
     * Gets the value of the d property.
     * 
     */
    public double getD() {
        return d;
    }

    /**
     * Sets the value of the d property.
     * 
     */
    public void setD(double value) {
        this.d = value;
    }

    /**
     * Gets the value of the f property.
     * 
     */
    public double getF() {
        return f;
    }

    /**
     * Sets the value of the f property.
     * 
     */
    public void setF(double value) {
        this.f = value;
    }

}

//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.0.2-b01-fcs 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2006.08.17 at 04:09:29 PM PDT 
//


package org.flowcyt.facejava.transformation.jaxb;

import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;


/**
 * 
 * 				The universal transformations enable to perform an unlimited number and types of transformations. To specify 
 * 				such transformations we use the Mathematical Markup Language (MathML) W3C specification. 
 * 				
 * 				MathML provides means for encoding the structure of mathematical expressions so that they can be displayed, 
 * 				manipulated and shared over the World Wide Web. A carefully encoded MathML expression can be evaluated in a 
 * 				computer algebra system, rendered in a Web browser, edited in a word processor, and printed on a printer. 
 * 			
 * 
 * <p>Java class for Universal complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="Universal">
 *   &lt;complexContent>
 *     &lt;extension base="{http://www.isac-net.org/std/Transformation-ML/v1.0/}AbstractTransformation">
 *       &lt;sequence>
 *         &lt;element ref="{http://www.w3.org/1998/Math/MathML}math"/>
 *       &lt;/sequence>
 *       &lt;attribute name="MathML-version" type="{http://www.isac-net.org/std/common-types/v1.0/}NonEmptyString" fixed="2.0" />
 *     &lt;/extension>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "Universal", namespace = "http://www.isac-net.org/std/Transformation-ML/v1.0/", propOrder = {
    "math"
})
public class Universal
    extends AbstractTransformation
{

    @XmlElement(namespace = "http://www.w3.org/1998/Math/MathML", required = true)
    protected MathType math;
    @XmlAttribute(name = "MathML-version", namespace = "http://www.isac-net.org/std/Transformation-ML/v1.0/")
    protected String mathMLVersion;

    /**
     * Gets the value of the math property.
     * 
     * @return
     *     possible object is
     *     {@link MathType }
     *     
     */
    public MathType getMath() {
        return math;
    }

    /**
     * Sets the value of the math property.
     * 
     * @param value
     *     allowed object is
     *     {@link MathType }
     *     
     */
    public void setMath(MathType value) {
        this.math = value;
    }

    /**
     * Gets the value of the mathMLVersion property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getMathMLVersion() {
        if (mathMLVersion == null) {
            return "2.0";
        } else {
            return mathMLVersion;
        }
    }

    /**
     * Sets the value of the mathMLVersion property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setMathMLVersion(String value) {
        this.mathMLVersion = value;
    }

}

package org.flowcyt.facejava.compensation.test;

import java.util.HashSet;
import java.util.Set;

import org.junit.Before;
import org.junit.BeforeClass;
import org.junit.Test;

/**
 * Runs test for copmensation when only six parameters are to be compensated. See the comments of
 * the CompensationML test file for the expected results. 
 * 
 * @author echng
 */
public class SixParameterCompensatorTests {
	private static final String MATRIX_FILE_URI = CompensatorTestHarness.TEST_FILE_DIRECTORY + "SixParameterCompensation.xml";
	
	private static CompensatorTestHarness harness;
	
	private Set<String> expectedReferences;
	
	@BeforeClass public static void oneTimeSetup() throws Exception {
		harness = new CompensatorTestHarness(MATRIX_FILE_URI);
	}
	
	@Before public void setUp() {
		expectedReferences = new HashSet<String>();
	}

	@Test public void testParametersEqual() throws Exception {
		expectedReferences.add("AS");
		expectedReferences.add("BS");
		expectedReferences.add("CS");
		expectedReferences.add("DS");
		expectedReferences.add("ES");
		expectedReferences.add("FS");
		
		double[][] expectedEventsData = {
			{-4.13219024912192, -4.54790289250433, -64.1337111534546, 40.0, 29.0981074286812, 56.7548190804771},
			{-6.42042413511828, 23.8087237286069, -126.801803407471, 100.0, 67.0510892959567, 112.41937620568},
			{-8.70865802111462, 52.1653503497181, -189.469895661487, 160.0, 105.004071163232, 168.083933330883},
			{-10.9968919071109, 80.5219769708293, -252.137987915503, 220.0, 142.957053030508, 223.748490456087},
			{-13.2851257931073, 108.87860359194, -314.806080169519, 280.0, 180.910034897783, 279.41304758129},
			{-15.5733596791036, 137.235230213052, -377.474172423535, 340.0, 218.863016765059, 335.077604706493},
			{-17.8615935651, 165.591856834163, -440.142264677551, 400.0, 256.815998632334, 390.742161831696},
			{-20.1498274510964, 193.948483455274, -502.810356931567, 460.0, 294.76898049961, 446.4067189569},
			{-22.4380613370927, 222.305110076385, -565.478449185583, 520.0, 332.721962366885, 502.071276082103},
			{-24.7262952230892, 250.661736697497, -628.146541439599, 580.0, 370.674944234161, 557.735833207306}
		};
		
		harness.runTestSequence("Equal", 
				CompensatorTestHarness.FCS_TEST_FILE_DIRECTORY + "int-10_events_6_parameters.fcs", 
				expectedEventsData,
				expectedReferences);
	}
	
	@Test public void testSSubD() throws Exception {
		expectedReferences.add("AS");
		expectedReferences.add("BS");
		expectedReferences.add("CS");
		expectedReferences.add("ES");
		expectedReferences.add("FS");
		expectedReferences.add("HS");
		
		double[][] expectedEventsData = {
			{1.5515612670147, 21.2014838939059, 20.3172823056532, 40, -3.47651589671854, 58.6172485988365, 70, 68.4638471068501},
			{75.4671280286476, 78.0074237689211, 74.3740095647337, 120, 63.635926594557, 72.7436955008693, 150, 117.770437369144},
			{149.382694790281, 134.813363643936, 128.430736823814, 200, 130.748369085833, 86.870142402902, 230, 167.077027631438},
			{223.298261551913, 191.619303518951, 182.487464082895, 280, 197.860811577108, 100.996589304935, 310, 216.383617893732},
			{297.213828313546, 248.425243393967, 236.544191341975, 360, 264.973254068384, 115.123036206968, 390, 265.690208156026},
			{371.129395075179, 305.231183268982, 290.600918601056, 440, 332.085696559659, 129.249483109, 470, 314.99679841832},
			{445.044961836812, 362.037123143997, 344.657645860137, 520, 399.198139050935, 143.375930011033, 550, 364.303388680614},
			{518.960528598445, 418.843063019012, 398.714373119217, 600, 466.31058154221, 157.502376913066, 630, 413.609978942909},
			{592.876095360078, 475.649002894027, 452.771100378298, 680, 533.423024033486, 171.628823815098, 710, 462.916569205203},
			{666.791662121711, 532.454942769043, 506.827827637378, 760, 600.535466524761, 185.755270717131, 790, 512.223159467497}
		};
		
		harness.runTestSequence("S-Sub-D", 
				CompensatorTestHarness.FCS_TEST_FILE_DIRECTORY + "int-10_events_8_parameters.fcs", 
				expectedEventsData,
				expectedReferences);
	}
	
	@Test public void testDSubS() throws Exception {
		expectedReferences.add("AS");
		expectedReferences.add("BS");
		expectedReferences.add("CS");
		expectedReferences.add("DS");
		expectedReferences.add("ES");
		expectedReferences.add("FS");
		
		double[][] expectedEventsData = {
			{114.028381268801, -56.0188448269466, -33.3490373557889, -10.6792298846311, 11.9905775865267, 34.6603850576845},
			{267.04973472047, -98.0329784471566, -58.3608153726305, -18.6886522981044, 20.9835107764217, 60.6556738509478},
			{420.071088172138, -140.047112067367, -83.3725933894721, -26.6980747115777, 29.9764439663168, 86.6509626442112},
			{573.092441623806, -182.061245687577, -108.384371406314, -34.707497125051, 38.9693771562118, 112.646251437475},
			{726.113795075475, -224.075379307786, -133.396149423155, -42.7169195385243, 47.9623103461068, 138.641540230738},
			{879.135148527143, -266.089512927996, -158.407927439997, -50.7263419519977, 56.9552435360019, 164.636829024001},
			{1032.15650197881, -308.103646548206, -183.419705456839, -58.7357643654709, 65.9481767258968, 190.632117817265},
			{1185.17785543048, -350.117780168416, -208.43148347368, -66.7451867789443, 74.9411099157919, 216.627406610528},
			{1338.19920888215, -392.131913788626, -233.443261490522, -74.7546091924175, 83.934043105687, 242.622695403791},
			{1491.22056233382, -434.146047408836, -258.455039507364, -82.7640316058909, 92.926976295582, 268.617984197055}
		};
		
		harness.runTestSequence("D-Sub-S", 
				CompensatorTestHarness.FCS_TEST_FILE_DIRECTORY + "int-10_events_6_parameters.fcs", 
				expectedEventsData,
				expectedReferences);
	}
	
	@Test public void testDIntS() throws Exception {
		expectedReferences.add("BS");
		expectedReferences.add("CS");
		expectedReferences.add("DS");
		expectedReferences.add("ES");
		expectedReferences.add("GS");
		expectedReferences.add("HS");
		
		double[][] expectedEventsData = {
				{10, -435.281052500873, -96.5953245798187, 110.17806614089, -37.9497104560753, 60, 358.395064338063, 177.55022032603},
				{90, -489.735568899072, -51.0113239305754, 185.274046458205, -75.9857140266698, 140, 414.989136461256, 246.557944672197},
				{170, -544.190085297272, -5.42732328133212, 260.370026775519, -114.021717597264, 220, 471.583208584449, 315.565669018364},
				{250, -598.644601695471, 40.1566773679111, 335.466007092833, -152.057721167858, 300, 528.177280707643, 384.573393364531},
				{330, -653.09911809367, 85.7406780171543, 410.561987410148, -190.093724738453, 380, 584.771352830837, 453.581117710698},
				{410, -707.55363449187, 131.324678666398, 485.657967727462, -228.129728309047, 460, 641.365424954031, 522.588842056865},
				{490, -762.008150890069, 176.908679315641, 560.753948044777, -266.165731879642, 540, 697.959497077224, 591.596566403033},
				{570, -816.462667288268, 222.492679964884, 635.849928362091, -304.201735450236, 620, 754.553569200417, 660.604290749199},
				{650, -870.917183686468, 268.076680614127, 710.945908679406, -342.237739020831, 700, 811.147641323611, 729.612015095366},
				{730, -925.371700084667, 313.66068126337, 786.04188899672, -380.273742591425, 780, 867.741713446803, 798.619739441533}
		};
		
		harness.runTestSequence("D-Int-S", 
				CompensatorTestHarness.FCS_TEST_FILE_DIRECTORY + "int-10_events_8_parameters.fcs", 
				expectedEventsData,
				expectedReferences);
	}
	
	@Test public void testNoParams() throws Exception {
		// No params should be compensated
		
		double[][] expectedEventsData = {
			{10.0, 20.0, 30.0, 40.0, 50.0, 60.0, 70.0, 80.0},
			{90.0, 100.0, 110.0, 120.0, 130.0, 140.0, 150.0, 160.0},	
			{170.0, 180.0, 190.0, 200.0, 210.0, 220.0, 230.0, 240.0},
			{250.0, 260.0, 270.0, 280.0, 290.0, 300.0, 310.0, 320.0},
			{330.0, 340.0, 350.0, 360.0, 370.0, 380.0, 390.0, 400.0},
			{410.0, 420.0, 430.0, 440.0, 450.0, 460.0, 470.0, 480.0},
			{490.0, 500.0, 510.0, 520.0, 530.0, 540.0, 550.0, 560.0},
			{570.0, 580.0, 590.0, 600.0, 610.0, 620.0, 630.0, 640.0},
			{650.0, 660.0, 670.0, 680.0, 690.0, 700.0, 710.0, 720.0},
			{730.0, 740.0, 750.0, 760.0, 770.0, 780.0, 790.0, 800.0}
		};
		
		harness.runTestSequence("NoParams", 
				CompensatorTestHarness.FCS_TEST_FILE_DIRECTORY + "int-10_events_8_parameters.fcs", 
				expectedEventsData,
				expectedReferences);
	}
}
